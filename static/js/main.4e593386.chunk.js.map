{"version":3,"sources":["components/search-box/search-box.jsx","components/card/card.jsx","components/card-list/card-list.jsx","App.js","reportWebVitals.js","index.js"],"names":["SearchBox","handleInput","className","type","onInput","placeholder","Card","name","email","website","src","alt","CardList","users","map","id","otherProps","App","useState","setUsers","useEffect","fetch","then","res","json","data","searchField","setSearchField","filteredUsers","filter","toLowerCase","includes","e","target","value","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+QASeA,G,YANG,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAH,OAChB,qBAAKC,UAAU,sBAAf,SACE,uBAAOC,KAAK,SAASC,QAASH,EAAaI,YAAY,yB,cCO5CC,G,YATF,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,MAAOC,EAAhB,EAAgBA,QAAhB,OACX,sBAAKP,UAAU,iBAAf,UACE,qBAAKQ,IAAG,qCAAgCH,EAAhC,iBAAqDI,IAAI,UACjE,6BAAKJ,IACL,4BAAIC,IACJ,4BAAIC,SCKOG,EARE,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACf,qBAAKX,UAAU,qBAAf,SACGW,EAAMC,KAAI,gBAAGC,EAAH,EAAGA,GAAOC,EAAV,6BACT,cAAC,EAAD,eAAmBA,GAARD,SCwBFE,MA1Bf,WAAgB,IAAD,EACaC,mBAAS,IADtB,mBACNL,EADM,KACCM,EADD,KAGbC,qBAAU,WACRC,MAAM,8CACHC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAAD,OAAUN,EAASM,QAC1B,IAPU,MASyBP,mBAAS,IATlC,mBASNQ,EATM,KASOC,EATP,KAePC,EAAgBf,EAAMgB,QAAO,qBAAGtB,KAAgBuB,cAAcC,SAAnB,UAA+BL,EAAYI,mBAE5F,OACE,qCACE,oBAAI5B,UAAU,QAAd,yBACA,cAAC,EAAD,CAAWD,YATK,SAAC+B,GACnBL,EAAeK,EAAEC,OAAOC,UAStB,cAAC,EAAD,CAAUrB,MAAOe,QCfRO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.4e593386.chunk.js","sourcesContent":["import React from 'react';\nimport './style.scss';\n\nconst SearchBox = ({ handleInput }) => (\n  <div className='searchbox-container'>\n    <input type='search' onInput={handleInput} placeholder='Search robots...' />\n  </div>\n);\n\nexport default SearchBox;\n","import React from 'react';\nimport './style.scss';\n\nconst Card = ({ name, email, website }) => (\n  <div className='card-container'>\n    <img src={`https://robohash.org/robot/${name}?size=200x200`} alt='robot' />\n    <h2>{name}</h2>\n    <p>{email}</p>\n    <p>{website}</p>\n  </div>\n);\n\nexport default Card;\n","import React from 'react';\nimport './style.scss';\n\nimport Card from '../card/card';\n\nconst CardList = ({ users }) => (\n  <div className='cardlist-container'>\n    {users.map(({ id, ...otherProps }) => (\n      <Card key={id} {...otherProps} />\n    ))}\n  </div>\n);\n\nexport default CardList;\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nimport SearchBox from './components/search-box/search-box';\nimport CardList from './components/card-list/card-list';\n\nfunction App() {\n  const [users, setUsers] = useState([]);\n\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then((res) => res.json())\n      .then((data) => setUsers(data));\n  }, []);\n\n  const [searchField, setSearchField] = useState('');\n\n  const handleInput = (e) => {\n    setSearchField(e.target.value);\n  };\n\n  const filteredUsers = users.filter(({ name }) => name.toLowerCase().includes(`${searchField.toLowerCase()}`));\n\n  return (\n    <>\n      <h1 className='title'>Robofriends</h1>\n      <SearchBox handleInput={handleInput} />\n      <CardList users={filteredUsers} />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}